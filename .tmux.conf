# =====================================
# ===         General               ===
# =====================================
# TrueColor
# set-option -ga terminal-overrides "xterm-256color"
set-window-option -g xterm-keys on
setw -g mode-keys vi
set -g mouse on
set -s escape-time 0
set -s focus-events on

# cmd+c and drag/drop support
set -g default-command "reattach-to-user-namespace -l /usr/local/bin/fish"

# count from 1
set -g base-index 1
setw -g pane-base-index 1

# iterm tab name
set -g set-titles on
setw -g set-titles-string "#S"

# for conditional binding
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# =====================================
# ===          Plugins              ===
# =====================================
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins/'
# tmux autostart and saving sessions between reebots
set -g @continuum-boot 'on'
set -g @continuum-restore 'on'
set -g @continuum-boot-options 'iterm'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-strategy-vim 'session'

# Status Line
set -g @themepack 'mytheme'
set -g @tmp-clean 'u'
set -g @fingers-key 'F'
set -g @jump-key 'J'

# List of plugins
set -g @tpm_plugins '               \
   tmux-plugins/tpm                 \
   jimeh/tmux-themepack             \
   tmux-plugins/tmux-continuum      \
   tmux-plugins/tmux-copy           \
   tmux-plugins/tmux-resurrect      \
   tmux-plugins/tmux-sensible       \
   tmux-plugins/tmux-sessionist     \
   tmux-plugins/tmux-yank           \
   christoomey/vim-tmux-navigator   \
   NHDaly/tmux-scroll-copy-mode     \
   Morantron/tmux-fingers           \
   schasse/tmux-jump                \
'

run '~/.config/tmux/plugins/tpm/tpm'
# =====================================
# ===          Nesting              ===
# =====================================

# colors
color_yellow="colour11"
color_black="colour232"
color_grey="colour238"

# separators (from .vimrc)
left_sep="\uE0B4"
left_alt_sep="\uE0B5"

# F12 toggle for nested tmux sessions
bind -T root S-F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_grey,bg=$color_yellow" \;\
  set window-status-current-format "#[default]#[bg=$color_yellow,fg=$color_grey]$left_sep #I $left_alt_sep #W $left_alt_sep #F #[bg=$color_grey,fg=$color_yellow]$left_sep" \;\
  set window-status-current-style "fg=$color_black,bold,bg=$color_yellow" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off S-F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

# =====================================
# ===         Controls              ===
# =====================================

# unbind non wanted commands
unbind '"'
unbind %
unbind C-b
unbind p
unbind n
unbind S
unbind C-z
unbind z
unbind =

# remap prefix to Control + a
set -g prefix C-a
bind C-a send-prefix

bind Escape copy-mode

# iterm2 CMD+<key>
bind C-e run-shell "tmux popup -E 'neomutt'"
bind C-f run-shell "tmux popup -E 'ranger'"
bind C-g run-shell "tmux popup -E 'lazygit'"
bind C-c run-shell "tmux popup -E 'tmux new-session -A -s cmus'"

# clear-console
bind C-l send-keys 'C-l'

# PANES
# joining panes
bind h command-prompt -p "join pane from:"  "join-pane -v -s '%%'"	# join target pane vertically
bind j command-prompt -p "join pane from:"  "join-pane -h -s '%%'"	# join target pane horizontally
bind d command-prompt -p "detach pane as:"  "break-pane -n '%%'"	# spits joined panes

# resizing panels
bind z if-shell "$is_vim" "send-keys C-w z" "resize-pane -Z"
bind Z resize-pane -Z
bind -n  C-S-Up resize-pane -U 5
bind -n  C-S-Down resize-pane -D 5
bind -n  C-S-Left resize-pane -L 5
bind -n  C-S-Right resize-pane -R 5

# WINDOWS
# window splits
bind S split-window -h -c "#{pane_current_path}"
bind V split-window -v -c "#{pane_current_path}"
bind s if-shell "$is_vim" "send-keys C-w s" "split-window -h -c '#{pane_current_path}'"
bind v if-shell "$is_vim" "send-keys C-w v" "split-window -v -c '#{pane_current_path}'"
bind \\ select-layout even-vertical
bind | select-layout even-horizontal

bind -n S-F1 previous-window
bind -n S-F2 next-window

# swap-windows (tabs) BTT: C-</>
bind -n S-F8 if-shell "$is_vim" "send-keys C-w <"
bind -n S-F9 if-shell "$is_vim" "send-keys C-w >"
bind -n S-F10 { swap-window -t -1; select-window -t -1 }
bind -n S-F11 { swap-window -t +1; select-window -t +1 }

bind x if-shell "$is_vim" "send-keys :qa! Enter" "confirm-before -p 'kill-pane #P? (y/n)' kill-pane"

bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
